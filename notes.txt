light/dark theme styles

Styling
	Layout
		Scoreboard
		Stats
		Results
		Buttons
	Grid structure
	Responsiveness
	Colors
	Light/Dark Mode
	Clear game data button

Show pretty results:
	You Win {Award icon} (Green)
	You Lose {Trash icon} (Red)
	Tie Game {FaRegWindowClose} (Black)
		Or
			Winner <robot icon> CPU
			Winner <person icon> Player

Handle formatting output for display
	Create a format.js file:
		Winner
		Your Shot
		CPU Shot
		----
		Win Percentage


Convert elements to components
	Shot buttons
	Play again
	Scoreboard
	Stats
		Player
		CPU
		Shot Charts
	Results
	---
	App Header
	App Footer
	Light/dark mode controls
	Fancy hr


Make a charts.js file to contain chart configuration

Rename RPS to Rps ...or rpsSomething

Host and deploy to github pages
	https://betterprogramming.pub/how-to-host-your-react-app-on-github-pages-for-free-919ad201a4cb

Add a confirmation when clearing all game data.


Refactor stat calculations using functions to reduce code duplication.

clean up (commented code, initial create react app stuff, etc)

JSDOC inline docs
	https://jsdoc.app/about-getting-started.html

Coding standards
Prettier

Update readme.md
	Uses:
		React APIs:
			useRef()
			useEffect()
			useReducer()
			useContext()
			createContext()
		Local Storage
		Tailwind v3
		Sass
		Google Fonts (self-hosted)
		Self-hosted fonts
		React Icons
		ChartJS v3
		{JSDOC, Coding standards, github pages CI/CD}

	Acknowledgements:
		favicon
		Fonts:
			Paytone One: https://fonts.google.com/specimen/Paytone+One#standard-styles
			Digital-7: https://www.1001fonts.com/digital-7-font.html

		RPS instuctions
			https://upload.wikimedia.org/wikipedia/commons/6/67/Rock-paper-scissors.svg

		Triforce logo: https://seeklogo.com/vector-logo/327217/triforce
		SVG to icon: https://cloudconvert.com/svg-to-ico
		Charts: ChartJS v3 and react-chartjs2



	Possible Future Enhancements
		Allow keyboard controls
			A,S,D
			Space to reset
		Rounds per game (best of): 1, 3, 5
			Ties don't count towards winning.
			Games
				Game
					Rounds
		Add stats (and charts?) for results by shot: Win/Lose/Draw:Rock, etc.
		Hack mode to force computer's shot
		Timing based clicks with style points for accuracy and timeout for fault.
		Achievements
		Opponents with ladder like Mortal Kombat.
		Oppenents with various strategies (always same shot, random, based on player's shot patterns, etc)
		Opponents that talk smack




Icons
--------
FaMedal
FaAward
FaTrophy
FaRegSadCry
FaCat
FaRegHandRock
FaRegHandPaper
FaRegHandScissors
FaRedoAlt,
FaRegWindowClose
FaWindowClose
FaRegTrashAlt,
VscSymbolBoolean


----
Done
----
light/dark toggle
Clear game data button

Implement ChartJS for shot counts

Handle Player/CPU stats
	- Win streak
	- Longest streak
	- Win percentage on page load
	- Win/Lose/Draw totals
	- Shot counts

Local Storage
	https://stackoverflow.com/a/64548196/3059883
		Set App Local Storage
		Set RPS Local Storage
		Clear RPS Local Storage and reset game state

gameCount now uses length of games array instead of incrementing a value.
Refactor shot count and win/lose/draw stat handling
Rotate and flip Rock icon

Stats: Shot counts
Handle scoreboard stats
Shot buttons
	When shot button is clicked, show it in clicked state
	disable all shot buttons
handle reset button
	hidden on initial state
	shown when round completes
		enables all shot buttons
		clear: player shot, cpu shot, results

Add local font
Add local Google Fonts:
	Fancy text
	npm install @fontsource/paytone-one
	Regular text
	npm install @fontsource/open-sans

Add SCSS support
Add Tailwind support
Move general RPS functions out of RPSReducer.js and into a separate file.

Improve file naming and organization
	/src
		/global
			AppContext.js
			AppReducer.js
		/components
			/RockPaperScissors
				RockPaperScissors.js
				ShootButton.js
				RPSContext.js
				RPSReducer.js

Clean up warnings
Use AppContext/RPSContext and AppReducer/RPSReducer
Implement theme switcher using AppConext/AppReducer
Update games played with useEffect
Handle saving Game to Games data

Determine and display winner
Display CPU shot
Handle CPU result calculation
Display player shot

Handle player shot
Rough out app structure

Rough out markup

---------------------
Helpful Links:
	Make the useEffect Hook Not Run on Initial Render
		https://javascript.plainenglish.io/how-to-make-the-useeffect-hook-not-run-on-initial-render-e42bc3389724

	Dark Mode in React
		https://levelup.gitconnected.com/dark-mode-in-react-533faaee3c6e

	Exports in JavaScript
		https://stackoverflow.com/a/38469257/3059883

	Self-hosting Google Fonts
		https://dev.to/danwalsh/self-host-google-fonts-in-your-next-react-project-with-fontsource-1n07

	Adding Local Fonts or Google Fonts In Tailwind CSS With WordPress
		https://imranhsayed.medium.com/adding-local-fonts-or-google-fonts-in-tailwind-css-with-wordpress-2850aac843fd

	Fancy hr
		https://stackoverflow.com/a/70203951/3059883