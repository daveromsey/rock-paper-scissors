Styling
	Basic grid structure
	Responsiveness
	Basic colors
	Light/Dark Mode

Convert elements to components
	Theme
	Scoreboard
	Stats
		Player
		CPU
	Results
	Play again
	Shot buttons

Show pretty results:
	You Win {Award icon} (Green)
	You Lose {Trash icon} (Red)
	Tie Game {FaRegWindowClose} (Black)

Shot buttons
	When shot button is clicked, show it in clicked state
	lock shot buttons that were not clicked

handle reset button
	hide until game ends
	unlocks all shot buttons
	clear: player shot, cpu shot, results



Handle Player/CPU stats

Handle scoreboard

Handle light/dark theme styles

clean up

Host and deploy to github pages
	https://betterprogramming.pub/how-to-host-your-react-app-on-github-pages-for-free-919ad201a4cb

Update readme.md
	Uses:
		React APIs:
			useRef()
			useEffect()
			useReducer() - One for the App and one for the RPS component.
			useContext() - One for the App and one for the RPS component.
		Local Storage
		Tailwind
		Sass
		Google Fonts (self-hosted)
		Self-hosted fonts
		React Icons

	Acknowledgements:
		favicon
		Fonts:
			Paytone One: https://fonts.google.com/specimen/Paytone+One#standard-styles
			Digital-7: https://www.1001fonts.com/digital-7-font.html

	RPS instuctions
	https://upload.wikimedia.org/wikipedia/commons/6/67/Rock-paper-scissors.svg

	Possible Future Enhancements
		Local Storage
		Reset Data to clear Local Storage
		Allow keyboard controls
			A,S,D
			Space to reset
		Rounds per game (best of): 1, 3, 5
			Ties don't count towards winning.
			Games
				Game
					Rounds
		Hack mode to force computer's shot
		Timing based clicks with style points for accuracy and timeout for fault.
		Achievements
		Opponents with ladder like Mortal Kombat.
		Oppenents with various strategies (always same shot, random, based on player's last shot, etc)
		Opponents that talk smack


Coding standards
Prettier

Icons
--------
FaMedal
FaAward
FaTrophy
FaRegSadCry
FaCat

FaRegHandRock
FaRegHandPaper
FaRegHandScissors

FaRedoAlt,
FaRegWindowClose
FaWindowClose

FaRegTrashAlt,


VscSymbolBoolean


----
Done
----


Add local font
Add local Google Fonts:
	Fancy text
	npm install @fontsource/paytone-one
	Regular text
	npm install @fontsource/open-sans

Add SCSS support
Add Tailwind support
Move general RPS functions out of RPSReducer.js and into a separate file.

Improve file naming and organization
	/src
		/global
			AppContext.js
			AppReducer.js
		/components
			/RockPaperScissors
				RockPaperScissors.js
				ShootButton.js
				RPSContext.js
				RPSReducer.js

Clean up warnings
Use AppContext/RPSContext and AppReducer/RPSReducer
Implement theme switcher using AppConext/AppReducer
Update games played with useEffect
Handle saving Game to Games data

Determine and display winner
Display CPU shot
Handle CPU result calculation
Display player shot

Handle player shot
Rough out app structure

Rough out markup

---------------------
Helpful Links:
	Make the useEffect Hook Not Run on Initial Render
		https://javascript.plainenglish.io/how-to-make-the-useeffect-hook-not-run-on-initial-render-e42bc3389724

	Dark Mode in React
		https://levelup.gitconnected.com/dark-mode-in-react-533faaee3c6e

	Exports in JavaScript
		https://stackoverflow.com/a/38469257/3059883

	Self-hosting Google Fonts
		https://dev.to/danwalsh/self-host-google-fonts-in-your-next-react-project-with-fontsource-1n07

	Adding Local Fonts or Google Fonts In Tailwind CSS With WordPress
		https://imranhsayed.medium.com/adding-local-fonts-or-google-fonts-in-tailwind-css-with-wordpress-2850aac843fd